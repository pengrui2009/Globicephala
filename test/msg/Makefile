export TOPDIR = $(shell pwd)/../..
export LIBDIR = $(TOPDIR)/library
include $(TOPDIR)/config.mk

LDFLAGS = -lm -lrt -pthread -L$(LIBDIR)/libnl/lib-imx6 -L$(LIBDIR)/alsa/lib -L$(LIBDIR)/curl/lib -lnl-3 -lnl-genl-3 -lasound -lcurl

SUBDIRS = \
          $(TOPDIR)/osal/linux \
	  $(TOPDIR)/osal \
	  $(TOPDIR)/drivers/audio \
	  $(TOPDIR)/drivers/barometer \
	  $(TOPDIR)/drivers/cmn \
	  $(TOPDIR)/drivers/gps \
	  $(TOPDIR)/drivers/led \
	  $(TOPDIR)/drivers/pps \
	  $(TOPDIR)/drivers/weather \
	  $(TOPDIR)/drivers/vguest \
	  $(TOPDIR)/drivers/vhost \
	  $(TOPDIR)/drivers/vnet \
	  $(TOPDIR)/protocols/nmea0183 \


ifeq ($(J2735_PROTOCAL_TYPE), J2735_UN)
	SUBDIRS +=  $(TOPDIR)/protocols/J2735/SAE   \
		    $(TOPDIR)/protocols/J2735/SAE/codec  
else ifeq($(J2735_PROTOCAL_TYPE), J2735_CN)
	SUBDIRS +=  $(TOPDIR)/protocols/J2735/CSAE   \
		    $(TOPDIR)/protocols/J2735/CSAE/codec  
endif


OBJ_FILES = $(SUBDIRS:%=%/*.o)


#SRC_FILES := $(wildcard *.c) 
#OBJ_FILES += $(SRC_FILES:%.c=%.o)
#TARGET := $(SRC_FILES:%.c=%)

#ifeq ($(shell if [ -a $(DEPENDENCIES) ]; then $(ECHO) 1; fi),1)
#include $(DEPENDENCIES)
#endif

all:app image
	@
app:
	@for subdir in $(SUBDIRS); do \
		(cd $$subdir && $(MAKE) all) || exit 1; \
	done	
image:
	$(CC) $(CFLAGS) $(CFLAGS_DBG) -c msg_recv.c -o msg_recv.o
	$(CC) $(CFLAGS) $(CFLAGS_DBG) -c msg_send.c -o msg_send.o
	$(CC) $(CFLAGS) $(CFLAGS_DBG) -c msg_clear.c -o msg_clear.o
	$(CC) $(OBJ_FILES) msg_recv.o $(LDFLAGS) -o msg_recv
	$(CC) $(OBJ_FILES) msg_send.o $(LDFLAGS) -o msg_send
	$(CC) $(OBJ_FILES) msg_clear.o $(LDFLAGS) -o msg_clear
	
$(DEPENDENCIES): $(SRC_FILES)
	@ $(ECHO) '##' > $(DEPENDENCIES)
	@ $(ECHO) '## This file is generated by "make"!' >> $(DEPENDENCIES)
	@ $(ECHO) '##' >> $(DEPENDENCIES)
	@for i in $^ ; do \
		$(CC) -M -MG $(CFLAGS) $$i >> $(DEPENDENCIES);  \
		$(ECHO) '##' >> $(DEPENDENCIES);	\
	done
	
ifeq ($(shell if [ -a $(DEPENDENCIES) ]; then $(ECHO) 1; fi),1)
include $(DEPENDENCIES)
endif

clean:
	rm -fr $(TARGET)
	@for subdir in $(SUBDIRS); do \
		(cd $$subdir && $(MAKE) clean) || exit 1; \
	done	
	-rm -f *.o $(DEPENDENCIES)

